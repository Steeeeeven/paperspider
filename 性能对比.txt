===============================================================================
UK Biobank 爬虫 - 性能优化对比
===============================================================================

【架构对比】

1. 旧版（顺序模式）
   ┌──────────────────────────────────────────────────────────────┐
   │  主线程                                                       │
   │  ┌─────────┐    ┌─────────┐    ┌─────────┐                  │
   │  │ 页面1   │ ─> │ 页面2   │ ─> │ 页面3   │ ─> ...           │
   │  └────┬────┘    └────┬────┘    └────┬────┘                  │
   │       │              │              │                        │
   │    ┌──┴──┐        ┌──┴──┐        ┌──┴──┐                   │
   │    │文章 │        │文章 │        │文章 │                   │
   │    │并发 │        │并发 │        │并发 │                   │
   │    └─────┘        └─────┘        └─────┘                   │
   └──────────────────────────────────────────────────────────────┘
   
   特点：
   - 页面顺序处理（慢）
   - 每页内文章并发
   - 共享单个浏览器实例
   - 总耗时 ≈ 2-3小时


2. 新版（并发模式）⭐ 推荐
   ┌──────────────────────────────────────────────────────────────┐
   │  主线程（页面级并发池：3个工作线程）                           │
   │  ┌─────────┐    ┌─────────┐    ┌─────────┐                  │
   │  │ 页面1   │    │ 页面2   │    │ 页面3   │                  │
   │  │(独立实例)│    │(独立实例)│    │(独立实例)│    同时运行！   │
   │  └────┬────┘    └────┬────┘    └────┬────┘                  │
   │       │              │              │                        │
   │    ┌──┴──┐        ┌──┴──┐        ┌──┴──┐                   │
   │    │文章 │        │文章 │        │文章 │   每页内文章也并发 │
   │    │并发 │        │并发 │        │并发 │                   │
   │    └─────┘        └─────┘        └─────┘                   │
   └──────────────────────────────────────────────────────────────┘
   
   特点：
   - 页面级并发（快！）
   - 每页内文章并发
   - 每个页面独立浏览器实例
   - 总耗时 ≈ 30-60分钟
   - 性能提升：3-5倍 🚀


===============================================================================
【性能数据对比】
===============================================================================

项目              │ 顺序模式        │ 并发模式（3线程）│ 并发模式（5线程）│
─────────────────┼────────────────┼─────────────────┼─────────────────┤
总页数            │ 224            │ 224             │ 224             │
总文章数          │ ~2240          │ ~2240           │ ~2240           │
预计耗时          │ 2-3小时        │ 40-60分钟       │ 30-50分钟       │
内存占用          │ 低 (~200MB)    │ 中 (~600MB)     │ 高 (~1GB)       │
Chrome进程数      │ 1              │ 3-4             │ 5-6             │
平均速度          │ ~0.3篇/秒      │ ~1.0篇/秒       │ ~1.5篇/秒       │
适用场景          │ 资源受限       │ 平衡性能 ⭐     │ 追求速度        │


===============================================================================
【使用建议】
===============================================================================

1. 日常使用（推荐）
   ─────────────
   命令：py ukbiobank_scraper.py
   说明：默认使用3线程并发，性能和资源占用平衡

2. 资源受限（低配机器）
   ───────────────────
   命令：py ukbiobank_scraper.py sequential
   或修改代码：max_workers=2
   说明：降低并发数或使用顺序模式

3. 追求速度（高配机器）
   ───────────────────
   修改代码：max_workers=5
   说明：提高并发数到5，需要16G+内存

4. 快速测试
   ────────
   命令：py test_concurrent.py
   说明：只爬取前5页，快速验证功能


===============================================================================
【关键优化点】
===============================================================================

✅ 1. 页面级并发
   - 从顺序处理改为并发处理
   - 3个页面同时爬取
   - 耗时减少到 1/3

✅ 2. 独立浏览器实例
   - 每个页面任务使用独立Chrome实例
   - 避免资源竞争
   - 线程安全

✅ 3. 双层并发
   - 外层：页面级并发（3个页面）
   - 内层：文章级并发（每页5个文章）
   - 总并发数：3×5 = 15个任务同时运行

✅ 4. 实时保存
   - 每篇文章完成后立即保存
   - 程序中断不会丢失数据
   - 线程安全的文件写入

✅ 5. 智能资源管理
   - 自动创建和销毁浏览器
   - 异常时自动清理资源
   - 内存占用可控


===============================================================================
【性能监控输出示例】
===============================================================================

运行时输出：

================================================================================
UK Biobank 爬虫 - 页面级并发模式（性能优化版）
================================================================================
关键词: heart
目标: 获取所有相关文章（页面级并发）
================================================================================

步骤 1: 检测总页数...
✓ 检测到总页数: 224
✓ 预计文章数: 2240 篇（每页约10篇）

步骤 2: 开始并发爬取（并发数: 3）...
================================================================================
✓ 第 1/224 页完成 | 文章数: 10 | 累计: 10 篇 | 进度: 1/224
✓ 第 3/224 页完成 | 文章数: 10 | 累计: 20 篇 | 进度: 2/224
✓ 第 2/224 页完成 | 文章数: 10 | 累计: 30 篇 | 进度: 3/224
✓ 第 4/224 页完成 | 文章数: 10 | 累计: 40 篇 | 进度: 4/224
...

================================================================================
爬取完成！
================================================================================
总页数: 224
成功页数: 224
失败页数: 0
总文章数: 2239
耗时: 2456.78 秒 (约41分钟)
平均速度: 0.91 篇/秒

文件位置:
  - CSV: publications_heart_concurrent.csv
  - JSON: publications_heart_concurrent.json

数据统计:
  - 有摘要: 2180 篇
  - 有DOI: 2239 篇
  - 有PubMed ID: 2239 篇


===============================================================================
【常见问题】
===============================================================================

Q1: 为什么并发模式内存占用高？
A1: 每个并发页面需要独立的Chrome浏览器实例（约100-200MB）。
    3线程并发 ≈ 3个Chrome实例 ≈ 600MB额外内存

Q2: 可以提高并发数到10吗？
A2: 不建议。过高的并发数会：
    - 占用大量内存（>2GB）
    - 可能触发网站反爬机制
    - 反而降低性能（资源竞争）
    建议范围：2-5

Q3: 并发模式会不会导致IP被封？
A3: 已经做了优化：
    - 保留了合理的延迟（每页2-3秒）
    - 使用真实浏览器（不易被检测）
    - 并发数适中（不会造成压力）

Q4: 为什么速度没有达到3倍提升？
A4: 实际提升受多种因素影响：
    - 网络速度（瓶颈）
    - 服务器响应时间
    - 机器性能
    - 页面加载时间
    理论最大值是并发数倍，实际约2-4倍

Q5: 可以断点续传吗？
A5: 当前版本实时保存已爬取数据，但不支持自动断点续传。
    如果中断，需要手动记录进度或修改起始页码。
    （这是未来优化方向）


===============================================================================
【详细文档】
===============================================================================

更多详细信息请查看：
- README.md - 基本使用说明
- CONCURRENT_MODE.md - 并发模式详细说明
- ukbiobank_scraper.py - 源代码（含详细注释）
- test_concurrent.py - 测试脚本

===============================================================================

